{
  "numFailedTestSuites": 2,
  "numFailedTests": 2,
  "numPassedTestSuites": 17,
  "numPassedTests": 151,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTotalTestSuites": 19,
  "numTotalTests": 153,
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 7,
    "total": 7,
    "unchecked": 0,
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1495643397317,
  "success": false,
  "testResults": [
    {
      "console": null,
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[1m.getCISourceForEnv › returns undefined if nothing is found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeNull(\u001b[22m\u001b[2m)\u001b[22m\n    \n    Expected value to be null, instead received\n      \u001b[31mundefined\u001b[39m\n\u001b[2m      \n      \u001b[2mat Object.<anonymous> (\u001b[2msource/ci_source/_tests/file:/Users/macklinu/dev/danger/danger-js/source/ci_source/_tests/_get_ci_source.test.ts\u001b[2m:8:16)\u001b[2m\n      \u001b[2mat Promise.resolve.then.el (\u001b[2mnode_modules/p-map/index.js\u001b[2m:42:16)\u001b[2m\n      \u001b[2mat process._tickCallback (\u001b[2minternal/process/next_tick.js\u001b[2m:103:7)\u001b[2m\u001b[22m\n",
      "numFailingTests": 1,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643401668,
        "start": 1495643399177
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/_tests/_get_ci_source.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            ".getCISourceForEnv"
          ],
          "duration": 412,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeNull(\u001b[22m\u001b[2m)\u001b[22m\n\nExpected value to be null, instead received\n  \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/macklinu/dev/danger/danger-js/source/ci_source/_tests/file:/Users/macklinu/dev/danger/danger-js/source/ci_source/_tests/_get_ci_source.test.ts:8:16)\n    at Object.asyncFn (/Users/macklinu/dev/danger/danger-js/node_modules/jest-jasmine2/build/jasmine-async.js:70:30)\n    at e (/Users/macklinu/dev/danger/danger-js/node_modules/jest-jasmine2/build/queueRunner.js:39:12)\n    at mapper (/Users/macklinu/dev/danger/danger-js/node_modules/jest-jasmine2/build/queueRunner.js:32:21)\n    at Promise.resolve.then.el (/Users/macklinu/dev/danger/danger-js/node_modules/p-map/index.js:42:16)\n    at process._tickCallback (internal/process/next_tick.js:103:7)"
          ],
          "fullName": ".getCISourceForEnv returns undefined if nothing is found",
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "returns undefined if nothing is found"
        },
        {
          "ancestorTitles": [
            ".getCISourceForEnv"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": ".getCISourceForEnv falls back to the fake if DANGER_FAKE_CI exists",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "falls back to the fake if DANGER_FAKE_CI exists"
        },
        {
          "ancestorTitles": [
            ".getCISourceForExternal"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": ".getCISourceForExternal should resolve module relatively",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should resolve module relatively"
        },
        {
          "ancestorTitles": [
            ".getCISourceForExternal"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": ".getCISourceForExternal should return undefined if module resolution fails",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should return undefined if module resolution fails"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643401751,
        "start": 1495643399226
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 5,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/platforms/github/_tests/_github_git.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 81,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL sets the modified/created/deleted",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "sets the modified/created/deleted"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 29,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL shows the diff for a specific file",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "shows the diff for a specific file"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL should include `before` text content of the file",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should include `before` text content of the file"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 17,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL should include `after` text content of the file",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should include `after` text content of the file"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL should include `added` text content of the file",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should include `added` text content of the file"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL should include `removed` text content of the file",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should include `removed` text content of the file"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 10,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL resolves to `null` for files not in modified_files",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "resolves to `null` for files not in modified_files"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL"
          ],
          "duration": 38,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL sets up commit data correctly",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "sets up commit data correctly"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL",
            "JSONPatchForFile"
          ],
          "duration": 10,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL JSONPatchForFile returns a null for files not in the modified_files",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "returns a null for files not in the modified_files"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL",
            "JSONPatchForFile"
          ],
          "duration": 12,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL JSONPatchForFile handles showing a patch for two different diff files",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles showing a patch for two different diff files"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL",
            "JSONDiffForFile"
          ],
          "duration": 15,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL JSONDiffForFile returns an empty object for files not in the modified_files",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "returns an empty object for files not in the modified_files"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL",
            "JSONDiffForFile"
          ],
          "duration": 59,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL JSONDiffForFile handles showing a patch for two different diff files",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles showing a patch for two different diff files"
        },
        {
          "ancestorTitles": [
            "the dangerfile gitDSL",
            "JSONDiffForFile"
          ],
          "duration": 21,
          "failureMessages": [],
          "fullName": "the dangerfile gitDSL JSONDiffForFile handles a package.json change elegantly",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles a package.json change elegantly"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643402446,
        "start": 1495643401733
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_circle.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds Circle with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds Circle with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI validates when all Circle environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Circle environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI does not validate without josh",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without josh"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR validates when all circle environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all circle environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".isPR does not validate outside of circle",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate outside of circle"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when CIRCLE_CI_API_TOKEN is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when CIRCLE_CI_API_TOKEN is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate when CIRCLE_PROJECT_USERNAME is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when CIRCLE_PROJECT_USERNAME is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when CIRCLE_PROJECT_REPONAME is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when CIRCLE_PROJECT_REPONAME is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when CIRCLE_BUILD_NUM is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when CIRCLE_BUILD_NUM is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR needs to have a PR number",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "needs to have a PR number"
        },
        {
          "ancestorTitles": [
            ".pullReuestID"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": ".pullReuestID pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        },
        {
          "ancestorTitles": [
            ".pullReuestID"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".pullReuestID can derive it from PR Url",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "can derive it from PR Url"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug derives it from the PR Url",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "derives it from the PR Url"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643403041,
        "start": 1495643401789
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_executor.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "setup"
          ],
          "duration": 15,
          "failureMessages": [],
          "fullName": "setup gets diff / pr info in setup",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "gets diff / pr info in setup"
        },
        {
          "ancestorTitles": [
            "setup"
          ],
          "duration": 71,
          "failureMessages": [],
          "fullName": "setup gets diff / pr info / utils in setup",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "gets diff / pr info / utils in setup"
        },
        {
          "ancestorTitles": [
            "setup"
          ],
          "duration": 39,
          "failureMessages": [],
          "fullName": "setup Creates a DangerResults for a raising dangerfile",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Creates a DangerResults for a raising dangerfile"
        },
        {
          "ancestorTitles": [
            "setup"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "setup Deletes a post when there are no messages",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Deletes a post when there are no messages"
        },
        {
          "ancestorTitles": [
            "setup"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "setup Updates or Creates comments for warnings",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Updates or Creates comments for warnings"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643403283,
        "start": 1495643402470
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/platforms/github/_tests/_github_api.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 22,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should return the correct review title from getReviewInfo",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should return the correct review title from getReviewInfo"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the issue label",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the issue label"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 10,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the commits of the pull request",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the commits of the pull request"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 6,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the reviews",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the reviews"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the reviewer requests",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the reviewer requests"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the pull request informations",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the pull request informations"
        },
        {
          "ancestorTitles": [],
          "duration": 8,
          "failureMessages": [],
          "fullName": "fileContents expects to grab PR JSON and pull out a file API call",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "fileContents expects to grab PR JSON and pull out a file API call"
        },
        {
          "ancestorTitles": [
            "API testing"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": "API testing getUserInfo",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "getUserInfo"
        },
        {
          "ancestorTitles": [
            "API testing"
          ],
          "duration": 25,
          "failureMessages": [],
          "fullName": "API testing updateCommentWithID",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "updateCommentWithID"
        },
        {
          "ancestorTitles": [
            "Peril"
          ],
          "duration": 12,
          "failureMessages": [],
          "fullName": "Peril Allows setting additional headers",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Allows setting additional headers"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643403598,
        "start": 1495643403052
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_drone.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds Drone with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds Drone with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".isCI validates when all Drone environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Drone environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 19,
          "failureMessages": [],
          "fullName": ".isCI does not validate without DRONE",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without DRONE"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR validates when all Drone environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Drone environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate without DRONE_PULL_REQUEST",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without DRONE_PULL_REQUEST"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".isPR does not validate when DRONE_PULL_REQUEST is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when DRONE_PULL_REQUEST is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when DRONE_REPO is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when DRONE_REPO is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR needs to have a PR number",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "needs to have a PR number"
        },
        {
          "ancestorTitles": [
            ".pullRequestID"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".pullRequestID pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643403782,
        "start": 1495643403341
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/platforms/_tests/_github.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 64,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should return the correct review title from getReviewInfo",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should return the correct review title from getReviewInfo"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the issue label",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the issue label"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the commits of the pull request",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the commits of the pull request"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the reviews",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the reviews"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the reviewer requests",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the reviewer requests"
        },
        {
          "ancestorTitles": [
            "getPlatformDSLRepresentation"
          ],
          "duration": 9,
          "failureMessages": [],
          "fullName": "getPlatformDSLRepresentation should get the pull request informations",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should get the pull request informations"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643404082,
        "start": 1495643403616
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 1,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/runner/templates/_tests/_githubIssueTemplates.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "generating messages shows no tables for empty results",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "shows no tables for empty results"
        },
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "generating messages shows no tables for results without messages",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "shows no tables for results without messages"
        },
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "generating messages Shows the failing messages in a table",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Shows the failing messages in a table"
        },
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "generating messages Shows the warning messages in a table",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Shows the warning messages in a table"
        },
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 11,
          "failureMessages": [],
          "fullName": "generating messages does not break commonmark rules around line breaks",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not break commonmark rules around line breaks"
        },
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": "generating messages Should include summary on top of message",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should include summary on top of message"
        },
        {
          "ancestorTitles": [
            "generating messages"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "generating messages leaves space between <td>s to allow GitHub to render message content as markdown",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "leaves space between <td>s to allow GitHub to render message content as markdown"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643404215,
        "start": 1495643403808
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/platforms/github/_tests/_github_utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "fileLinks"
          ],
          "duration": 17,
          "failureMessages": [],
          "fullName": "fileLinks Should convert a few paths into links",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should convert a few paths into links"
        },
        {
          "ancestorTitles": [
            "fileLinks"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "fileLinks Should convert a few paths into links showing full links",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should convert a few paths into links showing full links"
        },
        {
          "ancestorTitles": [
            "fileLinks"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "fileLinks Should convert a few paths into links showing full link on a custom fork/branch",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should convert a few paths into links showing full link on a custom fork/branch"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643404599,
        "start": 1495643404090
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_buildkite.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds Buildkite with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds Buildkite with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI validates when all Buildkite environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Buildkite environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI does not validate without env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without env"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR validates when all buildkite environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all buildkite environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate outside of buildkite",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate outside of buildkite"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when BUILDKITE_PULL_REQUEST is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when BUILDKITE_PULL_REQUEST is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate when BUILDKITE_REPO is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when BUILDKITE_REPO is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when BUILDKITE is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when BUILDKITE is missing"
        },
        {
          "ancestorTitles": [
            ".pullRequestID"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".pullRequestID pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug derives it from the repo URL",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "derives it from the repo URL"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug derives it from the repo URL in SSH format",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "derives it from the repo URL in SSH format"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643404721,
        "start": 1495643404229
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_travis.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds Travis with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds Travis with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 15,
          "failureMessages": [],
          "fullName": ".isCI validates when all Travis environment vars are set and Josh K says so",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Travis environment vars are set and Josh K says so"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI does not validate without josh",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without josh"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR validates when all Travis environment vars are set and Josh K says so",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Travis environment vars are set and Josh K says so"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate without josh",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without josh"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": ".isPR does not validate when TRAVIS_PULL_REQUEST is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when TRAVIS_PULL_REQUEST is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": ".isPR does not validate when TRAVIS_REPO_SLUG is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when TRAVIS_REPO_SLUG is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR needs to have a PR number",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "needs to have a PR number"
        },
        {
          "ancestorTitles": [
            ".pullRequestID"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".pullRequestID pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405031,
        "start": 1495643404612
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_jenkins.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds Jenkins with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds Jenkins with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI validates when JENKINS_URL is present in environment",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when JENKINS_URL is present in environment"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 36,
          "failureMessages": [],
          "fullName": ".isCI does not validate without JENKINS_URL",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without JENKINS_URL"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR validates when all Jenkins environment variables are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Jenkins environment variables are set"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate with required environment variables",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate with required environment variables"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when JENKINS_URL is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when JENKINS_URL is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate when ghprbPullId is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when ghprbPullId is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate when ghprbGhRepository is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when ghprbGhRepository is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR needs to have a PR number",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "needs to have a PR number"
        },
        {
          "ancestorTitles": [
            ".pullRequestID"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".pullRequestID pulls it out of environment",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of environment"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug pulls it out of environment",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of environment"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405094,
        "start": 1495643404749
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_semaphore.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds Semaphore with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds Semaphore with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI validates when all Semaphore environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all Semaphore environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI does not validate without josh",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without josh"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".isPR validates when all semaphore environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all semaphore environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate outside of semaphore",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate outside of semaphore"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate when SEMAPHORE_CI_API_TOKEN is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when SEMAPHORE_CI_API_TOKEN is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".isPR does not validate when SEMAPHORE_PROJECT_USERNAME is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when SEMAPHORE_PROJECT_USERNAME is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate when SEMAPHORE_PROJECT_REPONAME is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when SEMAPHORE_PROJECT_REPONAME is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": ".isPR does not validate when SEMAPHORE_BUILD_NUM is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when SEMAPHORE_BUILD_NUM is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR needs to have a PR number",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "needs to have a PR number"
        },
        {
          "ancestorTitles": [
            ".pullRequestID"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".pullRequestID pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug derives it from the PR Url",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "derives it from the PR Url"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405386,
        "start": 1495643405050
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/ci_source/providers/_tests/_dockerCloud.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "being found when looking for CI"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "being found when looking for CI finds DockerCloud with the right ENV",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "finds DockerCloud with the right ENV"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isCI validates when all DockerCloud environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all DockerCloud environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isCI"
          ],
          "duration": 7,
          "failureMessages": [],
          "fullName": ".isCI does not validate without env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate without env"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR validates when all dockerCloud environment vars are set",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "validates when all dockerCloud environment vars are set"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": ".isPR does not validate outside of dockerCloud",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate outside of dockerCloud"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when PULL_REQUEST_URL is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when PULL_REQUEST_URL is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when SOURCE_REPOSITORY_URL is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when SOURCE_REPOSITORY_URL is missing"
        },
        {
          "ancestorTitles": [
            ".isPR"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".isPR does not validate when DOCKER_REPO is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "does not validate when DOCKER_REPO is missing"
        },
        {
          "ancestorTitles": [
            ".pullRequestID"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": ".pullRequestID pulls it out of the env",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls it out of the env"
        },
        {
          "ancestorTitles": [
            ".repoSlug"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": ".repoSlug derives it from the PR Url",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "derives it from the PR Url"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405405,
        "start": 1495643405125
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/platforms/_tests/_platform.test.ts",
      "testResults": [
        {
          "ancestorTitles": [],
          "duration": 10,
          "failureMessages": [],
          "fullName": "should bail if there is no DANGER_GITHUB_API_TOKEN found",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should bail if there is no DANGER_GITHUB_API_TOKEN found"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405638,
        "start": 1495643405395
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/platforms/github/_tests/_pull_request_parser.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "parsing urls"
          ],
          "duration": 5,
          "failureMessages": [],
          "fullName": "parsing urls handles bad data",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles bad data"
        },
        {
          "ancestorTitles": [
            "parsing urls"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "parsing urls pulls out the repo / pr ID",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "pulls out the repo / pr ID"
        },
        {
          "ancestorTitles": [
            "parsing urls"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "parsing urls handles query params too",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles query params too"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405647,
        "start": 1495643405417
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/commands/utils/_tests/file-utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "dangerfilePath"
          ],
          "duration": 30,
          "failureMessages": [],
          "fullName": "dangerfilePath should return anything passed into the program's dangerfile",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should return anything passed into the program's dangerfile"
        },
        {
          "ancestorTitles": [
            "dangerfilePath"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "dangerfilePath should find a dangerfile.js if there is no program, and the .js file exists",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should find a dangerfile.js if there is no program, and the .js file exists"
        },
        {
          "ancestorTitles": [
            "dangerfilePath"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "dangerfilePath should find a dangerfile.ts if there is no program, and the .js file does not exist",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should find a dangerfile.ts if there is no program, and the .js file does not exist"
        },
        {
          "ancestorTitles": [
            "dangerfilePath"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "dangerfilePath should raise if nothing exists",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should raise if nothing exists"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": null,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643405893,
        "start": 1495643405646
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "sentence()"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "sentence() handles falsy input",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles falsy input"
        },
        {
          "ancestorTitles": [
            "sentence()"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "sentence() handles empty array",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles empty array"
        },
        {
          "ancestorTitles": [
            "sentence()"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "sentence() handles array with one item",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles array with one item"
        },
        {
          "ancestorTitles": [
            "sentence()"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "sentence() handles array with multiple items",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles array with multiple items"
        },
        {
          "ancestorTitles": [
            "href()"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "href() returns null when href and text are falsy",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "returns null when href and text are falsy"
        },
        {
          "ancestorTitles": [
            "href()"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": "href() returns just the text when the href is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "returns just the text when the href is missing"
        },
        {
          "ancestorTitles": [
            "href()"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "href() returns <a> tag with href as text when text is missing",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "returns <a> tag with href as text when text is missing"
        },
        {
          "ancestorTitles": [
            "href()"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "href() returns <a> tag for supplied href and text",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "returns <a> tag for supplied href and text"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    },
    {
      "console": null,
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mwith fixtures › handles multiple scheduled statements and all message types\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toEqual(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n    \n    Expected value to equal:\n      \u001b[32m{\"fails\": [{\"message\": \"Asynchronous\"}], \"markdowns\": [\"Asynchronous Markdown\"], \"messages\": [{\"message\": \"Asynchronous Message\"}], \"warnings\": [{\"message\": \"Asynchronous Warning\"}]}\u001b[39m\n    Received:\n      \u001b[31m{\"fails\": [{\"message\": \"Asynchronous Failure\"}], \"markdowns\": [\"Asynchronous Markdown\"], \"messages\": [{\"message\": \"Asynchronous Message\"}], \"warnings\": [{\"message\": \"Asynchronous Warning\"}]}\u001b[39m\n    \n    Difference:\n    \n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n    \n    \u001b[33m@@ -1,9 +1,9 @@\n    \u001b[39m\u001b[2m Object {\u001b[22m\n    \u001b[2m   \"fails\": Array [\u001b[22m\n    \u001b[2m     Object {\u001b[22m\n    \u001b[32m-      \"message\": \"Asynchronous\",\u001b[39m\n    \u001b[31m+      \"message\": \"Asynchronous Failure\",\u001b[39m\n    \u001b[2m     },\u001b[22m\n    \u001b[2m   ],\u001b[22m\n    \u001b[2m   \"markdowns\": Array [\u001b[22m\n    \u001b[2m     \"Asynchronous Markdown\",\u001b[22m\n    \u001b[2m   ],\u001b[22m\n\u001b[2m      \n      \u001b[2mat Object.<anonymous> (\u001b[2msource/runner/_tests/file:/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_runner.test.ts\u001b[2m:104:23)\u001b[2m\n      \u001b[2mat step (\u001b[2m\u001b[0m\u001b[36msource/runner/_tests/_danger_runner.test.ts\u001b[39m\u001b[0m\u001b[2m:32:23)\u001b[2m\n      \u001b[2mat Object.next (\u001b[2m\u001b[0m\u001b[36msource/runner/_tests/_danger_runner.test.ts\u001b[39m\u001b[0m\u001b[2m:13:53)\u001b[2m\n      \u001b[2mat fulfilled (\u001b[2m\u001b[0m\u001b[36msource/runner/_tests/_danger_runner.test.ts\u001b[39m\u001b[0m\u001b[2m:4:58)\u001b[2m\u001b[22m\n",
      "numFailingTests": 1,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "perfStats": {
        "end": 1495643410862,
        "start": 1495643399246
      },
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 1,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_runner.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 8267,
          "failureMessages": [],
          "fullName": "with fixtures handles a blank Dangerfile",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles a blank Dangerfile"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 32,
          "failureMessages": [],
          "fullName": "with fixtures handles a full set of messages",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles a full set of messages"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 20,
          "failureMessages": [],
          "fullName": "with fixtures handles a failing dangerfile",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles a failing dangerfile"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 98,
          "failureMessages": [],
          "fullName": "with fixtures handles relative imports correctly",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles relative imports correctly"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 33,
          "failureMessages": [],
          "fullName": "with fixtures handles scheduled (async) code",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "handles scheduled (async) code"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 173,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toEqual(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected value to equal:\n  \u001b[32m{\"fails\": [{\"message\": \"Asynchronous\"}], \"markdowns\": [\"Asynchronous Markdown\"], \"messages\": [{\"message\": \"Asynchronous Message\"}], \"warnings\": [{\"message\": \"Asynchronous Warning\"}]}\u001b[39m\nReceived:\n  \u001b[31m{\"fails\": [{\"message\": \"Asynchronous Failure\"}], \"markdowns\": [\"Asynchronous Markdown\"], \"messages\": [{\"message\": \"Asynchronous Message\"}], \"warnings\": [{\"message\": \"Asynchronous Warning\"}]}\u001b[39m\n\nDifference:\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[33m@@ -1,9 +1,9 @@\n\u001b[39m\u001b[2m Object {\u001b[22m\n\u001b[2m   \"fails\": Array [\u001b[22m\n\u001b[2m     Object {\u001b[22m\n\u001b[32m-      \"message\": \"Asynchronous\",\u001b[39m\n\u001b[31m+      \"message\": \"Asynchronous Failure\",\u001b[39m\n\u001b[2m     },\u001b[22m\n\u001b[2m   ],\u001b[22m\n\u001b[2m   \"markdowns\": Array [\u001b[22m\n\u001b[2m     \"Asynchronous Markdown\",\u001b[22m\n\u001b[2m   ],\u001b[22m\n    at Object.<anonymous> (/Users/macklinu/dev/danger/danger-js/source/runner/_tests/file:/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_runner.test.ts:104:23)\n    at step (/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_runner.test.ts:32:23)\n    at Object.next (/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_runner.test.ts:13:53)\n    at fulfilled (/Users/macklinu/dev/danger/danger-js/source/runner/_tests/_danger_runner.test.ts:4:58)"
          ],
          "fullName": "with fixtures handles multiple scheduled statements and all message types",
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "handles multiple scheduled statements and all message types"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 15,
          "failureMessages": [],
          "fullName": "with fixtures can schedule callback-based promised",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "can schedule callback-based promised"
        },
        {
          "ancestorTitles": [
            "with fixtures"
          ],
          "duration": 550,
          "failureMessages": [],
          "fullName": "with fixtures can handle TypeScript based Dangerfiles",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "can handle TypeScript based Dangerfiles"
        },
        {
          "ancestorTitles": [
            "cleaning Dangerfiles"
          ],
          "duration": 13,
          "failureMessages": [],
          "fullName": "cleaning Dangerfiles Supports removing the danger import",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Supports removing the danger import"
        },
        {
          "ancestorTitles": [
            "cleaning Dangerfiles"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": "cleaning Dangerfiles also handles typescript style imports",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "also handles typescript style imports"
        },
        {
          "ancestorTitles": [
            "cleaning Dangerfiles"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": "cleaning Dangerfiles also handles require style imports",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "also handles require style imports"
        },
        {
          "ancestorTitles": [],
          "duration": 2,
          "failureMessages": [],
          "fullName": "creates a working jest config",
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "creates a working jest config"
        }
      ],
      "sourceMaps": {},
      "skipped": false
    }
  ],
  "wasInterrupted": false
}
